---
en:
  vagrant:
    commands:
      status:
        frozen: |-
          The VM is frozen. To start it, you can run `vagrant up`, or you can
          instead run `vagrant destroy` to delete it and discard all saved state.
        stopped: |-
          The VM is stopped. To start it, you can run `vagrant up`, or you can
          instead run `vagrant destroy` to delete it and discard all saved state.
    errors:
      lxd_connection_failure: |-
        The provider was unable to contact the LXD daemon at %{api_endpoint}.
        
        It's possible that LXD isn't installed, or that it isn't configured to
        accept HTTPS connections from your machine. You can check whether HTTPS
        access is enabled with the following command:
        
            $ lxc config show core.https_address
        
        If the result is empty or an error is shown, you will need to correct
        the way LXD is configured before Vagrant can use it. This can be done
        with the following command:
        
            $ lxc config set core.https_address %{https_address}
        
        You can find more documentation about configuring LXD at:
        
            https://linuxcontainers.org/lxd/getting-started-cli/#initial-configuration
        
      lxd_authentication_failure: |-
        The provider could not authenticate to the LXD daemon at %{api_endpoint}.
        
        You may need configure LXD to allow requests from this machine. The
        easiest way to do this is to add your LXC client certificate to LXD's
        list of trusted certificates. This can typically be done with the
        following command:
        
            $ lxc config trust add %{client_cert}
        
        You can find more information about configuring LXD at:

            https://linuxcontainers.org/lxd/getting-started-cli/#initial-configuration
        
      lxd_operation_timeout: |-
        The container failed to respond within %{time_limit} seconds. Try
        running the following command to see whether an error occurs:
        
            $ lxc %{operation} %{machine_id}
        
        If that command runs successfully, there may be a bug in the LXD
        provider. If this is the case, please submit an issue at:
        
            https://gitlab.com/catalyst-it/vagrant-lxd/issues
        
      lxd_network_address_acquisition_timeout: |-
        The container failed to acquire an IPv4 address within %{time_limit}
        seconds. It's possible that the LXD network bridge has not been configured.
        Try running the following command to see whether a bridge exists and has
        an inet address:
        
            $ ip address show %{lxd_bridge}
        
        If that command runs successfully and the bridge appears to be correctly
        configured, there may be a bug in the LXD provider. If this is the case,
        please submit an issue at:
        
            https://gitlab.com/catalyst-it/vagrant-lxd/issues
        
      lxd_container_creation_failure: |-
        The provider was unable to create a container for the '%{machine_name}' VM.
        
        %{reason}.
        
        The LXD logs may contain more information about the cause of this failure.
        
      lxd_image_creation_failure: |-
        The provider was unable to create an LXD image for the '%{machine_name}' VM.
        
        The underlying error message was:
        
            %{error_message}
        
        This may be a bug in the LXD provider. If you think this is the case,
        please submit an issue at:
        
            https://gitlab.com/catalyst-it/vagrant-lxd/issues
        
      lxd_duplicate_attachment_failure: |-
        A machine can only be associated with one container at a time.
        
        To attach '%{machine_name}' to '%{container}', you must first
        detach it from its current container using `vagrant lxd detach`.
        
      lxd_container_not_found: |-
        The requested container '%{container}' doesn't exist.
        
        You can list available containers with the `lxc list` command.
      lxd_container_already_exists: |-
        A container with the name '%{container}' already exists.
        
        You will either need to delete this container and try again, or attach
        the VM to it with `vagrant lxd attach %{machine_name} %{container}`.
        
